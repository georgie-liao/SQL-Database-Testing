package storedproceduresTesting;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.apache.commons.lang3.StringUtils;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

/* Syntax                                Stored Procedures 
 { call procedure_name()}        Accept no parameters and return no value
 { call procedure_name(?,?)}     Accept two parameters and return no value
 { ?=call procedure_name() }     Accept no parameters and return value
 { ?=call procedure_name(?)}     Accept one parameters and return value
*/



public class SPTesting {
	
	Connection con=null;
	Statement stmt=null;
	ResultSet rs;
	
	@BeforeClass
	void setup() throws SQLException
	{
		con=DriverManager.getConnection("jdbc:mysql://localhost:3306/classicmodels", "root", "root");
	}
	
	@AfterClass
	void teardown() throws SQLException
	{
		con.close();
	}
	
	@Test(priority=1)
	void test_storedProceduresExists() throws SQLException
	{
		stmt=con.createStatement();
		rs=stmt.executeQuery("SHOW PROCEDURE STATUS WHERE Name = 'SelectAllCustomer'");
		rs.next();
		Assert.assertEquals(rs.getString("Name"), "SelectAllCustomer");
	}
	
	@Test(priority=2)
	void test_SelectAllCustomers()
	{
		con.prepareCall(null)
	}
	

	public boolean compareResultSets(ResultSet resultSet1, ResultSet resultSet2) throws SQLException {
		while (resultSet1.next())
		{
			resultSet2.next();
			int count = resultSet1.getMetaData().getColumnCount();
			for (int i = 1; i <= count; i++)
			{
				if(!StringUtils.equals(resultSet1.getString(i),resultSet2.getString(i)))
				{
					return false;
				}
			}
		}
		return true;
	}
	
}
